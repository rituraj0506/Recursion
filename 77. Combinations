Given two integers n and k, return all possible combinations of k numbers chosen from the range [1, n].
You may return the answer in any order.

Example 1:
Input: n = 4, k = 2
Output: [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]
Explanation: There are 4 choose 2 = 6 total combinations.
Note that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.

vector<int>res1;
    void f(int i,vector<int>&res,vector<vector<int>>&ans,int k)
    {
        if(res1.size()==k)
        {
          ans.push_back(res1);
            return;
        }
        if(i>=res.size())
            return;
        res1.push_back(res[i]);
        f(i+1,res,ans,k);
        res1.pop_back();
        f(i+1,res,ans,k);
    }
    vector<vector<int>> combine(int n, int k) {
     vector<vector<int>>ans;
     vector<int>res;
     for(int i=1;i<=n;i++)
     {
         res.push_back(i);
     }
        f(0,res,ans,k);
        return ans;
    }
